{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./Nataly/Dispatcher.js","webpack:///./Nataly/Store.js","webpack:///./Nataly/View.js","webpack:///./src/scripts/basicLogger.js","webpack:///./Nataly/Logger.js","webpack:///./src/scripts/basicDispatcher.js","webpack:///./src/scripts/actionsCreator/sendValueToServer.js","webpack:///./src/scripts/stores/formStore.js","webpack:///./src/scripts/views/FormView.js","webpack:///./src/scripts/views/LogView.js","webpack:///./src/scripts/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","Nataly_Dispatcher","[object Object]","this","stores","registerStore","bind","dispatch","store","Error","push","action","length","update","Nataly_Store","data","updateStoreByActions","subscribers","addSubscriber","updatingResult","subscriber","Nataly_View","DOMElement","element","listeners","basicLogger","logs","saveLog","keys","args","constructor","className","methodName","normalizeMethodName","split","logNumber","basicDispatcher_dispatcher","lookFor","basicDispatcher","sendValueToServer_SEND_VALUE_TO_SERVER","formStore_formStore","answerByServer","type","payload","stores_formStore","FormView_formElement","document","getElementsByClassName","FormView_formButtonElement","FormView_formInputElement","FormView_formAnswerElement","FormView_listeners","addEventListener","setTimeout","FormView_FormView","super","runListeners","dataFromStore","connectToStore","updateByStore","newData","updateView","innerText","views_FormView","LogView_logElement","views_LogView","dataFromLogs","updateByLogger","logger","newLogs","join","scripts_formView","connectToLogger"],"mappings":"aACA,IAAAA,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,IACAG,EAAAH,EACAI,GAAA,EACAH,YAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAZ,EAAAmB,EAAA,SAAAjB,GACAY,OAAAC,eAAAb,EAAA,cAAiDkB,OAAA,KAIjDpB,EAAAqB,EAAA,SAAAlB,GACA,IAAAS,EAAAT,KAAAmB,WACA,WAA2B,OAAAnB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAU,EAAAC,GAAsD,OAAAV,OAAAW,UAAAC,eAAAnB,KAAAgB,EAAAC,IAGtDxB,EAAA2B,EAAA,GAIA3B,IAAA4B,EAAA,yCCrCA,IAAAC,QA7BAC,cACAC,KAAAC,UACAD,KAAAE,cAAAF,KAAAE,cAAAC,KAAAH,MACAA,KAAAI,SAAAJ,KAAAI,SAAAD,KAAAH,MAOAD,cAAAM,GACA,IAAAA,EACA,UAAAC,MAAA,yDAEAN,KAAAC,OAAAM,KAAAF,GAOAN,SAAAS,GACA,QAAAnC,EAAA,EAAmBA,EAAA2B,KAAAC,OAAAQ,OAAwBpC,IAC3C2B,KAAAC,OAAA5B,GACAqC,OAAAF,KCiBA,IAAAG,QApCAZ,YAAAa,EAAAC,GACAb,KAAAY,OACAZ,KAAAa,uBACAb,KAAAc,eACAd,KAAAa,qBAAAb,KAAAa,qBAAAV,KAAAH,MACAA,KAAAe,cAAAf,KAAAe,cAAAZ,KAAAH,MAOAD,OAAAS,GACA,MAAAM,YAAWA,GAAcd,KACzBgB,EAAAhB,KAAAa,qBAAAL,GACA,GAAAQ,EACA,QAAA3C,EAAA,EAAqBA,EAAAyC,EAAAL,OAAwBpC,KAE7C4C,EADAH,EAAAzC,IACA2C,GASAjB,cAAAkB,GACA,sBAAAA,EACA,UAAAX,MAAA,gEAEAN,KAAAc,YAAAP,KAAAU,GACAA,EAAAjB,KAAAY,QCtBA,IAAAM,QAfAnB,YAAAoB,GACAnB,KAAAoB,QAAAD,EAOApB,oBAAAsB,GACA,QAAAhD,EAAA,EAAmBA,EAAAgD,EAAAZ,OAAsBpC,IACzCgD,EAAAhD,OCPA,IAAAiD,EAFA,UCDAvB,cACAC,KAAAuB,QACAvB,KAAAc,eACAd,KAAAwB,QAAAxB,KAAAwB,QAAArB,KAAAH,MACAA,KAAAe,cAAAf,KAAAe,cAAAZ,KAAAH,MAOAD,QAAAP,GACA,MAAAgC,QAAWA,GAAUxB,KACrByB,EAAA1C,OAAA0C,KAAAjC,GACA,QAAAnB,EAAA,EAAmBA,EAAAoD,EAAAhB,OAAiBpC,IAAA,CACpC,MAAAgB,EAAAG,EAAAiC,EAAApD,IACA,mBAAAgB,IAEAG,EAAAiC,EAAApD,IAAA,YAAAqD,GAEA,OADAF,EAAAhC,EAAAmC,YAAA/C,KAAAS,EAAAT,MACAS,KAAAqC,MAWA3B,QAAA6B,EAAAC,GACA,IAAAC,EAAAD,EAAAE,MAAA,KACAD,MAAArB,OAAA,GACA,MAAAuB,EAAAhC,KAAAuB,KAAAd,OAAA,EACAT,KAAAuB,KAAAhB,QAAsByB,0BAAkCJ,kBAA0BE,KAClF,QAAAzD,EAAA,EAAmBA,EAAA2B,KAAAc,YAAAL,OAA6BpC,KAEhD4C,EADAjB,KAAAc,YAAAzC,IACA2B,KAAAuB,MAQAxB,cAAAkB,GACAjB,KAAAc,YAAAP,KAAAU,GACAA,EAAAjB,KAAAuB,QC7CA,MAAAU,EAAA,IAAAnC,EACAwB,EAAAY,QAAAD,GAEA,IAAAE,EAAA,ECLA,MAAAC,EAAA,uBCiBA,MAAAC,EAAA,IAAA1B,GAbA2B,eAAA,iCAGA,SAAA9B,GACA,OAAAA,EAAA+B,MACA,KAAAH,EACA,UAAcpC,KAAAY,KAAA0B,eAAA9B,EAAAgC,SACd,QACA,eAOAlB,EAAAY,QAAAG,GAEA,IAAAI,EAAA,ECnBA,MAAAC,EAAAC,SAAAC,uBAAA,gBACAC,EAAAF,SAAAC,uBAAA,uBACAE,EAAAH,SAAAC,uBAAA,uBACAG,EAAAJ,SAAAC,uBAAA,uBAEAI,GACA,KACAH,EAAAI,iBAAA,aFPA5D,EEQAyD,EAAAzD,MFPA8C,EAAA/B,UACAmC,KAAAH,EACAI,QAAA,+BAEAU,WAAA,KACAf,EAAA/B,UACAmC,KAAAH,EACAI,QAAA,kCAEG,KAEHU,WAAA,KACA,IAAAV,EAAA,kEACAnD,EAAAoB,SACA+B,EAAA,kCAEAL,EAAA/B,UACAmC,KAAAH,EACAI,aAEG,UArBH,IAAAnD,QEaA8D,UAAAjC,EACAnB,cACAqD,MAAAV,GACAxB,EAAAmC,aAAAL,GACAhD,KAAAsD,iBACAtD,KAAAuD,eAAAvD,KAAAuD,eAAApD,KAAAH,MACAA,KAAAwD,cAAAxD,KAAAwD,cAAArD,KAAAH,MAGAD,eAAAM,GACAL,KAAAsD,cAAAjD,EAAAO,KACAP,EAAAU,cAAAf,KAAAwD,eAGAzD,cAAA0D,GACAzD,KAAAsD,kBAA0BtD,KAAAsD,cAAAG,WAC1BN,EAAAO,WAAAD,GAGA1D,kBAAA0D,GACA,MAAAnB,eAAWA,GAAiBmB,EAC5BV,EAAAY,UAAA,MACAT,WAAA,KACAH,EAAAY,UAAArB,GACK,MAKL,IAAAsB,EAAA,EC5CA,MAAAC,EAAAlB,SAAAC,uBAAA,UA2BA,IAAAkB,gBAzBA5C,EACAnB,cACAqD,MAAAS,GACA7D,KAAA+D,gBACA/D,KAAAgE,eAAAhE,KAAAgE,eAAA7D,KAAAH,MACAA,KAAA0D,WAAA1D,KAAA0D,WAAAvD,KAAAH,MAGAD,gBAAAkE,GACAA,EAAAlD,cAAAf,KAAAgE,gBAGAjE,eAAAmE,GACAlE,KAAA+D,iBAAyB/D,KAAA+D,aAAAG,WACzBA,GACAlE,KAAA0D,WAAAQ,GAIAnE,WAAAmE,GACA,MAAA3C,EAAA2C,EACAlE,KAAAoB,QAAAuC,UAAApC,EAAA4C,KAAA,QChBAhC,EAAAjC,cAAAuC,GAGA,MAAA2B,EAAA,IAAAR,EAEAtC,EAAAY,QAAAkC,GAEAA,EAAAb,eAAAd,IAGA,IAAAqB,GACAO,gBAAA/C","file":"./js/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","class Dispatcher {\n  constructor() {\n    this.stores = [];\n    this.registerStore = this.registerStore.bind(this);\n    this.dispatch = this.dispatch.bind(this);\n  }\n\n  /**\n   * Регистрация хранилища\n   * @param {Store} store \n   */\n  registerStore(store) {\n    if (!store) {\n      throw new Error('вы должны передать store для регистрации в dispatcher');\n    }\n    this.stores.push(store);\n  }\n\n  /**\n   * Оповещение зарегестрированных хранилищ об Action\n   * @param {object} action \n   */\n  dispatch(action) {\n    for (let i = 0; i < this.stores.length; i++) {\n      const store = this.stores[i];\n      store.update(action);\n    }\n  }\n}\n\nexport default Dispatcher;\n","class Store {\n  /**\n   * Создаем новый Store\n   * @param {object} data \n   * @param {function} updateStoreByActions \n   */\n  constructor(data, updateStoreByActions) {\n    this.data = data;\n    this.updateStoreByActions = updateStoreByActions;\n    this.subscribers = [];\n    this.updateStoreByActions = this.updateStoreByActions.bind(this);\n    this.addSubscriber = this.addSubscriber.bind(this);\n  }\n\n  /**\n   * Обновление данных в Store\n   * @param {object} action \n   */\n  update(action) {\n    const { subscribers } = this;\n    const updatingResult = this.updateStoreByActions(action);\n    if (updatingResult) {\n      for (let i = 0; i < subscribers.length; i++) {\n        const subscriber = subscribers[i];\n        subscriber(updatingResult);\n      }\n    }\n  }\n  \n  /**\n   * Добавление подписчика на изменения в Store\n   * @param {function} subscriber \n   */\n  addSubscriber(subscriber) {\n    if (typeof subscriber !== 'function') {\n      throw new Error('подписчик, регистрируемыей в хранилище, должен быть функцией');\n    }\n    this.subscribers.push(subscriber);\n    subscriber(this.data);\n  }\n}\n\nexport default Store;\n\n","class View {\n  constructor(DOMElement) {\n    this.element = DOMElement;\n  }\n\n  /**\n   * Запускаем функции-слушатели событий\n   * @param {array} listeners \n   */\n  static runListeners(listeners) {\n    for (let i = 0; i < listeners.length; i++) {\n      listeners[i]();\n    }\n  }\n}\n\nexport default View;\n","import { Logger } from '../../Nataly';\n\nconst logger = new Logger();\n\nexport default logger;\n","class Logger {\n  constructor() {\n    this.logs = [];\n    this.subscribers = [];\n    this.saveLog = this.saveLog.bind(this);\n    this.addSubscriber = this.addSubscriber.bind(this);\n  }\n\n  /**\n   * Декорирование функций объекта для слежения за их вызовом\n   * @param {object} object\n   */\n  lookFor(object) {\n    const { saveLog } = this;\n    const keys = Object.keys(object);\n    for (let i = 0; i < keys.length; i++) {\n      const value = object[keys[i]];\n      if (typeof value === 'function') {\n        // eslint-disable-next-line\n        object[keys[i]] = function wrapper(...args) {\n          saveLog(object.constructor.name, value.name);\n          return value(...args);\n        };\n      }\n    }\n  }\n\n  /**\n   * Обработка и сохранение лога\n   * @param {string} className \n   * @param {string} methodName \n   */\n  saveLog(className, methodName) {\n    let normalizeMethodName = methodName.split(' ');\n    normalizeMethodName = normalizeMethodName[normalizeMethodName.length - 1];\n    const logNumber = this.logs.length + 1;\n    this.logs.push(`${logNumber}. в экземпляре класса ${className} вызван метод ${normalizeMethodName}`);\n    for (let i = 0; i < this.subscribers.length; i++) {\n      const subscriber = this.subscribers[i];\n      subscriber(this.logs);\n    }\n  }\n\n  /**\n   * Добавление подписчика на изменения в Store\n   * @param {function} subscriber \n   */\n  addSubscriber(subscriber) {\n    this.subscribers.push(subscriber);\n    subscriber(this.logs);\n  }\n}\n\nexport default Logger;\n","import { Dispatcher } from '../../Nataly';\n\nimport logger from './basicLogger';\n\nconst dispatcher = new Dispatcher();\nlogger.lookFor(dispatcher);\n\nexport default dispatcher;\n","import dispatcher from '../basicDispatcher';\n\nexport const SEND_VALUE_TO_SERVER = 'SEND_VALUE_TO_SERVER';\n\nexport const sendValueToServer = (value) => {\n  dispatcher.dispatch({\n    type: SEND_VALUE_TO_SERVER,\n    payload: 'Происходит отправка данных',\n  });\n  setTimeout(() => {\n    dispatcher.dispatch({\n      type: SEND_VALUE_TO_SERVER,\n      payload: 'Очень долгая отправка данных',\n    });\n  }, 2000);\n\n  setTimeout(() => {\n    let payload = 'Сервер хотел получить сообщение, но до него дошла лишь пустота.';\n    if (value.length) {\n      payload = 'Сервер получил ваше сообщение.';\n    }\n    dispatcher.dispatch({\n      type: SEND_VALUE_TO_SERVER,\n      payload,\n    });\n  }, 3500);\n};\n\n","import { Store } from '../../../Nataly';\n\nimport logger from '../basicLogger';\nimport { SEND_VALUE_TO_SERVER } from '../actionsCreator/sendValueToServer';\n\nconst formStoreData = {\n  answerByServer: 'Ответа от сервера еще не было',\n};\n\nfunction updateStoreByActions(action) {\n  switch (action.type) {\n    case SEND_VALUE_TO_SERVER:\n      return { ...this.data, answerByServer: action.payload };\n    default:\n      return null;\n  }\n}\n\n// создаем singleton\nconst formStore = new Store(formStoreData, updateStoreByActions);\n// подписываемся на логгинг событий в formStore \nlogger.lookFor(formStore);\n\nexport default formStore;\n","import { View } from '../../../Nataly';\n\nimport { sendValueToServer } from '../actionsCreator/sendValueToServer';\n\nconst formElement = document.getElementsByClassName('view-stub')[0];\nconst formButtonElement = document.getElementsByClassName('view-stub__apply')[0];\nconst formInputElement = document.getElementsByClassName('view-stub__input')[0];\nconst formAnswerElement = document.getElementsByClassName('view-stub__label')[0];\n\nconst listeners = [\n  () => {\n    formButtonElement.addEventListener('click', () => {\n      sendValueToServer(formInputElement.value);\n    });\n  },\n];\n\nclass FormView extends View {\n  constructor() {\n    super(formElement);\n    View.runListeners(listeners);\n    this.dataFromStore = {};\n    this.connectToStore = this.connectToStore.bind(this);\n    this.updateByStore = this.updateByStore.bind(this);\n  }\n\n  connectToStore(store) {\n    this.dataFromStore = store.data;\n    store.addSubscriber(this.updateByStore);\n  }\n\n  updateByStore(newData) {\n    this.dataFromStore = { ...this.dataFromStore, newData };\n    FormView.updateView(newData);\n  }\n\n  static updateView(newData) {\n    const { answerByServer } = newData;\n    formAnswerElement.innerText = '...';\n    setTimeout(() => {\n      formAnswerElement.innerText = answerByServer;\n    }, 100);\n  }\n}\n\n\nexport default FormView;\n\n","import { View } from '../../../Nataly';\n\nconst logElement = document.getElementsByClassName('log')[0];\n\nclass LogView extends View {\n  constructor() {\n    super(logElement);\n    this.dataFromLogs = {};\n    this.updateByLogger = this.updateByLogger.bind(this);\n    this.updateView = this.updateView.bind(this);\n  }\n\n  connectToLogger(logger) {\n    logger.addSubscriber(this.updateByLogger);\n  }\n\n  updateByLogger(newLogs) {\n    this.dataFromLogs = { ...this.dataFromLogs, newLogs };\n    if (newLogs) {\n      this.updateView(newLogs);\n    }\n  }\n\n  updateView(newLogs) {\n    const logs = newLogs;\n    this.element.innerText = logs.join('\\n');\n  }\n}\n\nexport default LogView;\n\n","import dispatcher from './basicDispatcher';\nimport logger from './basicLogger';\n\nimport formStore from './stores/formStore';\n\nimport FormView from './views/FormView';\nimport LogView from './views/LogView';\n\n// регистрируем store у диспетчера\ndispatcher.registerStore(formStore);\n\n// создаем view для формы\nconst formView = new FormView();\n// подписываемся на логирование\nlogger.lookFor(formView);\n// подписываемся во view на поля из formStore\nformView.connectToStore(formStore);\n\n// создаем view для формы\nconst logView = new LogView();\nlogView.connectToLogger(logger);\n"],"sourceRoot":""}