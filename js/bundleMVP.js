!function(e){var t={};function s(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,s),o.l=!0,o.exports}s.m=e,s.c=t,s.d=function(e,t,n){s.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:n})},s.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="",s(s.s=2)}([function(e,t,s){"use strict";s.r(t);var n=class{constructor(){this.logs=[],this.subscribers=[],this.addSubscriber=this.addSubscriber.bind(this)}getLoggerPublisher(){return this.addSubscriber}saveLog(e){const t=this.logs.length;this.logs.push(`${t}. ${e}`);for(let e=0;e<this.subscribers.length;e++)(0,this.subscribers[e])(this.logs)}addSubscriber(e){this.subscribers.push(e),e(this.logs)}};class o extends n{constructor(e,t,s,n){super(),this.view=e,this.model=t,this.eventsConnectors=s,this.initConnectors=this.initConnectors.bind(this),this.options=n,this.initConnectors()}initConnectors(){this.initConnector("viewToModel"),this.initConnector("modelToView"),this.initConnector("modelToModel")}initConnector(e){const{view:t,model:s,eventsConnectors:n,options:i}=this,{isLogging:r}=i,a=n[e];if(!a.length)return;let d,l;switch(e){case"viewToModel":d=t,l=s;break;case"modelToView":d=s,l=t;break;case"modelToModel":d=s,l=s;break;default:throw new Error("фреймворк не знает о предоставленном типе коннектора")}a.forEach(t=>{d.events[t.in](s=>{r&&this.saveLog(o.makeLog(e,t)),l[t.out](s)})})}static makeLog(e,t){const s=e.split("To").map(e=>e.toLowerCase());return`Presenter: -> на событие ${t.in} из ${s[0]}       срабатывает метод ${t.out} из ${s[1]}`}}var i=o;const r=e=>({handleGetModelData:t=>{e.addEventListener("getModelData",e=>{t(e.detail)})}});var a=class{constructor(e,t){this.data=e,this.elementForEvents=t,this.events=r(t)}addEvents(e){this.events=Object.assign(this.events,e)}getModelData(){this.makeEvent("getModelData",this.data)}updateModelData(e){this.data=e}makeEvent(e,t){const s=new CustomEvent(e,{detail:t});this.elementForEvents.dispatchEvent(s)}};const d={viewToModel:[{in:"handleSendToServer",out:"sendDataToServer"}],modelToModel:[{in:"handleDataSentToServer",out:"getModelData"},{in:"handleReceivedDataByServer",out:"getModelData"}],modelToView:[{in:"handleGetModelData",out:"updateView"}]};var l=class extends i{constructor(e,t,s){super(e,t,d,s)}};const c=document.createElement("div"),u={handleDataSentToServer:e=>{c.addEventListener("dataSentToServer",t=>{e(t.detail)})},handleReceivedDataByServer:e=>{c.addEventListener("dataReceivedByServer",t=>{e(t.detail)})}};var h=class extends a{constructor(){super(null,c),this.addEvents(u)}sendDataToServer(e){this.updateModelData("данные отправлены, ждем ответа"),this.makeEvent("dataSentToServer"),setTimeout(()=>{this.updateModelData("Долго ждем ответа"),this.makeEvent("dataSentToServer")},2e3),setTimeout(()=>{let t="Сервер хотел получить сообщение, но до него дошла лишь пустота.";e.length&&(t="Сервер получил ваше сообщение."),this.updateModelData(t),this.makeEvent("dataReceivedByServer")},4e3)}};const v=document.getElementsByClassName("view-stub")[0],m=document.getElementsByClassName("view-stub__apply")[0],g=document.getElementsByClassName("view-stub__input")[0],p=document.getElementsByClassName("view-stub__label")[0],b={handleSendToServer:e=>{m.addEventListener("click",()=>{e(g.value)})}};var w=class{constructor(){this.elements={formElement:v,formButtonElement:m,formInputElement:g,formAnswerElement:p},this.events=b}updateView(e){this.elements.formAnswerElement.innerText=e}};const E=document.getElementsByClassName("log")[0];var f=class{constructor(){this.element=E,this.dataFromLogs={},this.updateByLogger=this.updateByLogger.bind(this),this.updateView=this.updateView.bind(this)}connectToLogger(e){e(this.updateByLogger)}updateByLogger(e){this.dataFromLogs={...this.dataFromLogs,newLogs:e},e&&this.updateView(e)}updateView(e){const t=e;this.element.innerText=t.join("\n")}};const T=new l(new w,new h,{isLogging:!0});(new f).connectToLogger(T.getLoggerPublisher())},function(e,t){},function(e,t,s){s(0),e.exports=s(1)}]);
//# sourceMappingURL=bundle.js.map